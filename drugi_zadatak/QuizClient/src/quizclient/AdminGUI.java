/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quizclient;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ivan Milin
 */
public class AdminGUI extends javax.swing.JFrame {

    QuizClient parent;
    private BufferedReader br;
    private ArrayList<String> comboboxUsers;
    private Map<String, AbstractButton> memberButtonMap;
    ArrayList<String> alreadyUsed;
    /**
     * Creates new form AdminGUI
     */
    
    public AdminGUI(QuizClient parent) {
        this.parent = parent;
        this.br = parent.getBr();
        initComponents();
        comboboxUsers = new ArrayList<>();
        memberButtonMap = new HashMap<>();
        alreadyUsed = new ArrayList<>();
        cbPresentMembers.removeAllItems();
        
        jButton_addUser.setEnabled(false);
        jButton_removeUser.setEnabled(false);
    }

    public void refreshComboBoxes(ArrayList<String> activeUsers) {
        cbPresentMembers.removeAllItems();
        for (String member : activeUsers) {
            cbPresentMembers.addItem(member);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox_admin = new javax.swing.JCheckBox();
        jCheckBox_contestant = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_username = new javax.swing.JTextField();
        jTextField_password = new javax.swing.JPasswordField();
        jButton_addUser = new javax.swing.JButton();
        jButton_removeUser = new javax.swing.JButton();
        jButton_sendQuestionSet = new javax.swing.JButton();
        cbPresentMembers = new javax.swing.JComboBox<>();
        jButton_checkFormat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AdminGUI");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("A D M I N    G U I");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Change set of questions :");

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox1.setText("1");

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox2.setText("2");

        buttonGroup1.add(jCheckBox3);
        jCheckBox3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox3.setText("3");

        buttonGroup1.add(jCheckBox4);
        jCheckBox4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox4.setText("4");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Chose participant to send questions  :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Add or remove participants :");

        buttonGroup2.add(jCheckBox_admin);
        jCheckBox_admin.setText("Admin");

        buttonGroup2.add(jCheckBox_contestant);
        jCheckBox_contestant.setText("Contestant");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Username :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Password :");

        jTextField_username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTextField_password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButton_addUser.setText("Add");
        jButton_addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addUserActionPerformed(evt);
            }
        });

        jButton_removeUser.setText("Remove");
        jButton_removeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_removeUserActionPerformed(evt);
            }
        });

        jButton_sendQuestionSet.setText("Posalji pitanja");
        jButton_sendQuestionSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sendQuestionSetActionPerformed(evt);
            }
        });

        cbPresentMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPresentMembersActionPerformed(evt);
            }
        });

        jButton_checkFormat.setText("CheckFormat");
        jButton_checkFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_checkFormatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_removeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_checkFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField_password)
                            .addComponent(jTextField_username))
                        .addContainerGap(115, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox_admin)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox4))
                                    .addComponent(jCheckBox_contestant, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(cbPresentMembers, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_sendQuestionSet)))
                        .addGap(103, 103, 103))))
            .addGroup(layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton_sendQuestionSet)
                    .addComponent(cbPresentMembers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBox_admin)
                    .addComponent(jCheckBox_contestant))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_addUser)
                    .addComponent(jButton_removeUser)
                    .addComponent(jButton_checkFormat))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addUserActionPerformed
        // TODO add your handling code here:
        if(parent.getLoginNumber() == 3)
        {
            if(jCheckBox_admin.isSelected() || jCheckBox_contestant.isSelected())
            {
                if(!parent.getUsernameFromTextField().equals(jTextField_username.getText()))
                {
                    if(jCheckBox_admin.isSelected())
                    {
                        int points = 0;
                        String role = "admin";
                        String username = jTextField_username.getText();
                        String password = jTextField_password.getText();

                        QuizMemberClient member = new QuizMemberClient(username, password, role);

                        comboboxUsers = parent.getPresentMembers();
                        comboboxUsers.add(member.getUserName());                    
                        refreshComboBoxes(comboboxUsers);

                        String porukaZaSlanje = "AddNewUser =" + ":" + member.getUserName() + ":" + member.getPassword() + ":" + member.getRole();
                        parent.getPw().println(porukaZaSlanje);

                        //System.out.println("");
                    }
                    else if(jCheckBox_contestant.isSelected())
                    {
                        int points = 0;
                        String role = "contestant";
                        String username = jTextField_username.getText();
                        String password = jTextField_password.getText();

                        QuizMemberClient member = new QuizMemberClient(username, password, role);

                        comboboxUsers = parent.getPresentMembers();
                        comboboxUsers.add(member.getUserName());
                        refreshComboBoxes(comboboxUsers);

                        String porukaZaSlanje = "AddNewUser =" + member.getUserName() + ":" + member.getPassword() + ":" + member.getRole();
                        System.out.println(porukaZaSlanje);
                        parent.getPw().println(porukaZaSlanje); 

                        jButton_addUser.setEnabled(false);
                        jButton_removeUser.setEnabled(false);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "You can't add same username!");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You forgot to choose role");
            }
        }
        if(parent.getLoginNumber() == 5)
        {
            jButton_addUser.setEnabled(false);
            jButton_removeUser.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Wrong format, try again");
        }
    }//GEN-LAST:event_jButton_addUserActionPerformed

    private void jButton_removeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_removeUserActionPerformed
        // TODO add your handling code here:
        if(parent.getLoginNumber() == 3)
        {
        
            Iterator<String> it = parent.getPresentMembers().iterator();

            if(!parent.getUsernameFromTextField().equals(jTextField_username.getText()))
            {
                while(it.hasNext())
                {
                    if(it.next().equals(jTextField_username.getText()))
                    {
                        it.remove();
                    }
                }

                jButton_addUser.setEnabled(false);
                jButton_removeUser.setEnabled(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You can't remove yourself!");
            }

            refreshComboBoxes(parent.getPresentMembers());

            String porukaZaSlanje = "RemoveUserFromFile =" + jTextField_username.getText();
            System.out.println(porukaZaSlanje);
            parent.getPw().println(porukaZaSlanje);
        }
        if(parent.getLoginNumber() == 5)
        {
            jButton_addUser.setEnabled(false);
            jButton_removeUser.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Wrong format, try again");
        }
    }//GEN-LAST:event_jButton_removeUserActionPerformed

    private void jButton_sendQuestionSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sendQuestionSetActionPerformed
        // TODO add your handling code here:
        ButtonModel selectedModel = buttonGroup1.getSelection();
        
        if(selectedModel != null)
        {
            Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
            if(!cbPresentMembers.getSelectedItem().equals(parent.getUsernameFromTextField()))
            {    
                while(buttons.hasMoreElements())
                {
                    AbstractButton button = buttons.nextElement();
                    if(button.isSelected())
                    {
                        String selectedMemberName = (String) cbPresentMembers.getSelectedItem();
                        System.out.println("SendQuestionSetTo =" + selectedMemberName + ":" + button.getText());
                        String porukaZaSlanje = "SendQuestionSetTo =" + selectedMemberName + ":" + button.getText();
                        
                        if(alreadyUsed.contains(porukaZaSlanje) && !alreadyUsed.isEmpty())
                        {
                            JOptionPane.showMessageDialog(null, "You have already used this combination. Please try another one.");
                            return; // Return without further processing
                        }
                        else
                        {
                            alreadyUsed.add(porukaZaSlanje);
                            parent.getPw().println(porukaZaSlanje);
                        }
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You can't send questionset to yourself!");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "You didn't chose question set");
        }
    }//GEN-LAST:event_jButton_sendQuestionSetActionPerformed

    private void jButton_checkFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_checkFormatActionPerformed
        // TODO add your handling code here:
        
        String porukaZaSlanje = "CheckFormat =" + jTextField_username.getText() + ":" + jTextField_password.getText();
        System.out.println(porukaZaSlanje);
        parent.getPw().println(porukaZaSlanje);
        
        jButton_addUser.setEnabled(true);
        jButton_removeUser.setEnabled(true);
    }//GEN-LAST:event_jButton_checkFormatActionPerformed

    private void cbPresentMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPresentMembersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPresentMembersActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        QuizClient parent = new QuizClient();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminGUI(parent).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbPresentMembers;
    private javax.swing.JButton jButton_addUser;
    private javax.swing.JButton jButton_checkFormat;
    private javax.swing.JButton jButton_removeUser;
    private javax.swing.JButton jButton_sendQuestionSet;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox_admin;
    private javax.swing.JCheckBox jCheckBox_contestant;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField jTextField_password;
    private javax.swing.JTextField jTextField_username;
    // End of variables declaration//GEN-END:variables
}
